{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","api/unsplash.js","env.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","React","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","axios","create","baseURL","headers","Authorization","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","length","ReactDOM","render","document","querySelector"],"mappings":"sQA4BeA,E,4MAzBbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACvC,yBAAKK,UAAU,SACb,+CACA,2BACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAjBtCK,aCmCTC,E,kDAhCb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAaRY,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKL,SAAS,CAAES,WAhBhB,EAAKtB,MAAQ,CACXsB,MAAO,GAGT,EAAKH,SAAWM,IAAMC,YAPL,E,gEAWjBlB,KAAKW,SAASC,QAAQO,iBAAiB,OAAQnB,KAAKS,Y,+BAW5C,IAAD,EACuBT,KAAKH,MAAMuB,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KACrB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAWxB,KAAKR,MAAMsB,SAC5C,yBAAKW,IAAKzB,KAAKW,SAAUe,IAAKL,EAAaM,IAAKL,EAAKM,e,GA3BrCrB,aCQTsB,G,MARG,SAAChC,GACjB,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAACX,GAC/B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG1C,OAAO,yBAAKrB,UAAU,cAAc+B,K,QCNvBI,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAc,aAAD,OCNS,kDC4BXC,E,4MAtBb/C,MAAQ,CACNsC,OAAQ,I,EAGVU,e,uCAAiB,WAAO/C,GAAP,eAAAgD,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOpD,KAFJ,OACTqD,EADS,OAKf,EAAKzC,SAAS,CAAEyB,OAAQgB,EAASC,KAAKC,UALvB,2C,6GAQf,OACE,yBAAKjD,UAAU,eAAewB,MAAO,CAAE0B,UAAW,SAChD,kBAAC,EAAD,CAAWnD,SAAUE,KAAKwC,iBAC1B,kBAAC,EAAD,CAAWV,OAAQ9B,KAAKR,MAAMsC,SAC9B,uCAAa9B,KAAKR,MAAMsC,OAAOoB,OAA/B,gB,GAjBU3C,aCDlB4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.c5e27712.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n  state = { term: '' };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className='ui segment'>\n        <form className='ui form' onSubmit={this.onFormSubmit}>\n          <div className='field'>\n            <label>Image Search</label>\n            <input\n              type='text'\n              value={this.state.term}\n              onChange={(e) => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\n\n// refactor to use hooks\n\nclass ImageCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spans: 0,\n    };\n\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans });\n  };\n\n  render() {\n    const { description, urls } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${ this.state.spans}`}}>\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport ImageCard from './ImageCard';\nimport './ImageList.css';\n\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n\n  return <div className='image-list'>{images}</div>;\n};\n\nexport default ImageList;\n","import axios from 'axios';\nimport { ACCESS_KEY } from '../env';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: `Client-ID ${ACCESS_KEY}`,\n  },\n});\n","export const ACCESS_KEY = 'dFAvRmXnIGlVc45JilFyjmy590ZPKms0jx0sWYPvHvE';","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport unsplash from '../api/unsplash';\n\nclass App extends Component {\n  state = {\n    images: [],\n  };\n\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get('/search/photos', {\n      params: { query: term },\n    });\n\n    this.setState({ images: response.data.results });\n  };\n  render() {\n    return (\n      <div className='ui container' style={{ marginTop: '10px' }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n        <div>Found: {this.state.images.length} Images</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}